<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans        
    						http://www.springframework.org/schema/beans/spring-beans-2.5.xsd        
    						http://www.springframework.org/schema/context        
   							http://www.springframework.org/schema/context/spring-context-2.5.xsd
   							http://www.springframework.org/schema/tx    
          					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
     						http://www.springframework.org/schema/aop 
     						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
   							http://www.springframework.org/schema/mvc  
						    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<mvc:annotation-driven />
	<context:component-scan base-package="com.imooc.quartz" />
	<!-- 通过MVC:resources设置静态资源，这样servlet就会处理这些静态资源而不通过控制器 -->
	<!-- 设置不过滤内容，比如：css，jQuery，img等资源文件 -->
	<mvc:resources location="/*.html" mapping="/**.html" />
	<mvc:resources location="/css/*" mapping="/css/**" />
	<mvc:resources location="/js/*" mapping="/js/**" />
	<mvc:resources location="/images" mapping="/images/**" />

	<!-- mvc:view-controller可以在不需要controller处理request的情况下，转向到设置的view -->
	<!-- 像下面这样的设置，如果请求为/，则不通过controller，而直接解析为/index.jsp -->
	<mvc:view-controller path="/" view-name="index" />
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView"></property>
		<!-- 配置jsp路径前缀 -->
		<property name="prefix" value="/" />
		<!-- 配置URL路径后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="simpleJobDetail"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="myBean" />
		<property name="targetMethod" value="printMessage" />
	</bean>
	<bean id="firstComplexJobDetail"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
		<property name="jobClass" value="com.imooc.quartz.FirstScheduledJob" />
		<property name="jobDataMap">
			<map>
				<entry key="anotherBean" value-ref="anotherBean"></entry>
			</map>
		</property>
		<property name="durability" value="true"/>
	</bean>

	<!-- 距离当前时间1秒后执行，之后每隔两秒钟执行一次 -->
	<bean id="mySimpleTrigger"
		class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">
		<property name="jobDetail" ref="simpleJobDetail" />
		<property name="startDelay" value="1000" />
		<property name="repeatInterval" value="2000" />
	</bean>

	<!-- 每隔5秒执行一次 -->
	<bean id="myCronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
		<property name="jobDetail" ref="firstComplexJobDetail" />
		<property name="cronExpression" value="0/5 * * ? * *" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="jobDetails">
			<list>
				<ref bean="simpleJobDetail" />
				<ref bean="firstComplexJobDetail" />
			</list>
		</property>
		<property name="triggers">
			<list>
				<ref bean="mySimpleTrigger" />
				<ref bean="myCronTrigger" />
			</list>
		</property>
	</bean>
</beans>